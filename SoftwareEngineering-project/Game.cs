using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SoftwareEngineering_project
{
    public class Game
    {
        int maxPieces;
        int countRealPieces; // how many real pieces generated by GM so far
        int minNrRealPieces = MyGlobals.nrGoals;
        int maxNrRealPieces = 2*MyGlobals.nrGoals - MyGlobals.rnd.Next(1, MyGlobals.nrGoals); // nr real pieces smaller than nr total goals


        public Game() { }

        
        public void addPieceInGame() {

            // add piece to board only if there isn't alredy a free piece
            foreach (var pi in MyGlobls.pieces) {
                if (pi.getOwner() == NULL) {
                    return;
                }
            }

            Piece p = new Piece();

            if (getMaxAvailableTiles() > 0) {
                if (p.getSham())
                {
                    MyGlobals.pieces.add(p);
                }
                else {

                    if (countRealPieces < maxNrRealPieces) {
                        MyGlobals.pieces.add(p);
                        countRealPieces++;
                    }                   
                }
            }
        }

        public static int getMaxAvailableTiles()
        {
            return MyGlobals.Height* MyGlobals.Width - MyGlobals.players.Count() - MyGlobals.pieces.Count();
        }


        // returns character 't' if it was a tie, and 'n' if not finished
        public char determineWinner() {
            int discoveredByBlue = 0;
            int discoveredByRed = 0;

            // count discovered goals by blue team
            foreach (var goal in MyGlobals.goalsBlue) {
                if (goal.getDiscovered()) {
                    discoveredByBlue++;
                }
            }

            // count discovered goals by red team
            foreach (var goal in MyGlobals.goalsRed)
            {
                if (goal.getDiscovered())
                {
                    discoveredByRed++;
                }
            }

            if ((discoveredByBlue == MyGlobals.nrGoals) && (discoveredByRed == MyGlobals.nrGoals))
            {
                return 't';
            }
            else if (discoveredByBlue == MyGlobals.nrGoals)
            {
                return 'b';
            }
            else if (discoveredByRed == MyGlobals.nrGoals)
            {
                return 'r';
            }
            else {
                return 'n';
            }
        }
    }
}
